{"version":3,"sources":["components/IconCard/IconCard.js","components/Wrapper/index.js","components/Header/Header.js","components/Nav/Nav.js","App.js","index.js"],"names":["IconCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","clickHandler","id","Wrapper","children","Header","Nav","href","class","message","currentScore","topScore","App","state","icons","maxScore","isClickedCorrect","handleSaveClick","iconsImage","_this","imageClicked","filter","friend","clicked","handleIncorrectClick","handleCorrectClick","randomizeCharacters","setState","characters","sort","b","Math","random","isGuessCorrect","messageClass","resetGame","i","length","_this2","this","components_Wrapper","components_Nav_Nav","components_Header_Header","map","IconCard_IconCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9b208903.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction IconCard(props) {\r\n  // Props make react component reusable so you can use the same component with different data every time.\r\n  //The same principle is used when creating functions we create a function with parameters so we can pass them different arguments every time and get different results.\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} \r\n        onClick={() => props.clickHandler(props.id)} \r\n        />      \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IconCard;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => (\r\n    <div className=\"header\">\r\n      <h1>Brewery Clicky Game</h1>\r\n      <h2>Click on an Brewery Icon to earn point, but don not click on any more than once!</h2>\r\n    </div> \r\n   \r\n  );\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = props => (\r\n\r\n   <nav className=\"bg-nav fixed-top navbar nav-height nav-shadow p-0 tp-text\">\r\n   <ul className=\"row center list-inline m-0 nav-fill nav-height nav-width\">\r\n     <li className=\"col list-inline-item my-auto nav-calc-font p-0 m-0 text-center\">\r\n       <a href=\"/\"><i class=\"fas fa-beer\"></i></a>\r\n     </li>\r\n     <li className=\"message\"> {props.message}</li>\r\n     <li className=\"score\">\r\n        Score:    { props.currentScore }  |\r\n        Top Score:   { props.topScore } \r\n     </li>\r\n   </ul>\r\n </nav>\r\n);\r\n\r\nexport default Nav;","import React, { Component } from \"react\";\nimport IconCard from \"./components/IconCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport icons from \"./icons.json\";\nimport Nav from \"./components/Nav\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.icons to the icons json array\n  state = {\n    icons: icons,\n    topScore: 0,\n    currentScore: 0,\n    maxScore: 10,\n    message: 'Click a Logo to begin',\n    isClickedCorrect: true\n\n  };\n// Main click handler function\n  handleSaveClick = id => {\n    // Variable to hold the icons state.\n    const iconsImage = this.state.icons;\n    // Search through character icons to find the one that matches the clicked id.\n    const imageClicked = iconsImage.filter(friend => friend.id === id);\n\n    // If the friend isn't clicked...\n    if (!imageClicked[0].clicked) {\n      // ...set it to now be clicked\n      imageClicked[0].clicked = true;\n      // ...call this function to register the correct guess\n      this.handleCorrectClick();\n      // ...add the bouncy animation for correct guess\n      //this.toggleAnimation(true);\n\n      // ... randomize character icons\n      this.randomizeCharacters(iconsImage);\n\n      this.setState({ iconsImage });\n      //alert(\"Congradulation!! You Won!\");\n\n    } else {\n      this.handleIncorrectClick();\n     // this.toggleAnimation(false);\n    // alert(\"Sorry! You Clicked More Than Once!\");\n    }\n  };\n\n  // Function to randomize the characters\n  randomizeCharacters = characters => {\n    characters.sort((a, b) => {\n      return 0.5 - Math.random();\n    });\n  };\n\n  // Handler for correct guesses/clicks\n  handleCorrectClick = () => {\n    this.setState({ isGuessCorrect: true });\n    if (this.state.currentScore + 1 > this.state.topScore) {\n      this.setState({ topScore: this.state.topScore + 1 });\n    }\n    if (this.state.currentScore + 1 >= this.state.maxScore) {\n      this.setState({\n        currentScore: this.state.currentScore + 1,\n        message: \"CONGRATS! YOU WIN!\",\n        messageClass: \"correct\"\n      });\n    } else {\n      this.setState({\n        currentScore: this.state.currentScore + 1,\n        message: \"YOU GUESSED CORRECTLY!\",\n        messageClass: \"correct\"\n      });\n    }\n  };\n\n  // Handler for incorrect guesses/clicks\n  handleIncorrectClick = () => {\n    this.setState({\n      message: \"INCORRECT. PLEASE TRY AGAIN!\",\n      isGuessCorrect: false\n    });\n    // this.toggleIncorrectAnimation();\n    this.resetGame();\n  };\n\n  // Resets the game\n  resetGame = id => {\n    const iconsImage = this.state.icons;\n    for (let i = 0; i < iconsImage.length; i++) {\n      iconsImage[i].clicked = false;\n    }\n    this.setState({ currentScore: 0 });\n  };\n\n  // Map over this.state.icons and render a IconCard component for each friend object\n  render() {\n\n  //  }\nreturn (\n<Wrapper>\n  <div>\n    <Nav\n    topScore={this.state.topScore}\n    currentScore={this.state.currentScore} \n    message={this.state.message}\n    /> \n  </div>\n    <Header/>\n     \n        {this.state.icons.map(friend => (\n          <IconCard\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            clickHandler={this.handleSaveClick}\n          />\n        ))}\n  </Wrapper>\n    );\n  }\n}\n\nexport default App;","    \nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}